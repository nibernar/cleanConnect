[AuthAction] RegisterHost action appel√©e avec: {firstName: 'kk', lastName: 'kk', email: 'kk@hotmail.fr', phone: '0569049567', password: 'ggwp31320',¬†‚Ä¶}
Registering host with data: {firstName: 'kk', lastName: 'kk', email: 'kk@hotmail.fr', phone: '0569049567', password: 'ggwp31320',¬†‚Ä¶}
[Layout/Main] √âtat principal: {isAuthenticated: false, userType: undefined, loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Aucun utilisateur fourni
[Layout] caaaca undefined dans register,host
[Layout/Main] Rendu du slot principal
API Request: POST /auth/register/host
API Request Headers: AxiosHeaders¬†{Accept: 'application/json', Content-Type: 'application/json'}
[AuthAction] RegisterHost r√©ponse: {success: true, token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3Z‚Ä¶jEwfQ.JBwxnfKh4bxX2Z9w6usVL6v_OlEM4sZrQs_6fw7gjGU', user: {‚Ä¶}}
Auth token set globally
üîÑ Synchronizing user data from auth: {id: '67ddab82ad36e217932ade0c', firstName: 'kk', lastName: 'kk', email: 'kk@hotmail.fr', role: 'host',¬†‚Ä¶}
[Layout/Main] √âtat principal: {isAuthenticated: false, userType: undefined, loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Aucun utilisateur fourni
[Layout] caaaca undefined dans host,dashboard
[Layout/Main] Rendu du slot principal
[DEBUG] HostDashboard - Tentative de d√©termination du type utilisateur
[DEBUG] HostDashboard - Aucun utilisateur fourni
[DEBUG] HostDashboard - Tentative de d√©termination du type utilisateur
[DEBUG] HostDashboard - Aucun utilisateur fourni
[HostDashboard] V√©rification du type utilisateur: undefined
[HostDashboard] Utilisateur non authentifi√©, redirection vers login
[Layout] Analyse de route: {segments: Array(2), firstSegment: 'host', isAuthenticated: false, userType: undefined, userId: undefined,¬†‚Ä¶}
[Layout] Non authentifi√©, redirection vers login
[LoginScreen] V√©rification √©tat authentification: {isAuthenticated: false, userId: undefined}
[Layout/Main] √âtat principal: {isAuthenticated: false, userType: undefined, loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Aucun utilisateur fourni
[Layout] caaaca undefined dans (auth)
[Layout/Main] Rendu du slot principal
[Layout] Analyse de route: {segments: Array(1), firstSegment: '(auth)', isAuthenticated: false, userType: undefined, userId: undefined,¬†‚Ä¶}
[Layout] Non authentifi√©, redirection vers login
[LoginScreen] V√©rification √©tat authentification: {isAuthenticated: false, userId: undefined}
[SyncMiddleware] Action d√©tect√©e: auth/registerHost/fulfilled, synchronisation des √©tats...
[SyncMiddleware] Donn√©es utilisateur extraites de auth action: ID: 67ddab82ad36e217932ade0c, Type: host
üîÑ Synchronizing user data from auth: {id: '67ddab82ad36e217932ade0c', firstName: 'kk', lastName: 'kk', email: 'kk@hotmail.fr', role: 'host',¬†‚Ä¶}
[Layout/Main] √âtat principal: {isAuthenticated: true, userType: 'host', loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Type trouv√© dans user: host
[Layout] caaaca host dans (auth)
[Layout/Main] Rendu du slot principal
[LoginScreen] V√©rification √©tat authentification: {isAuthenticated: true, userId: '67ddab82ad36e217932ade0c'}
[LoginScreen] Utilisateur d√©j√† authentifi√©, redirection
[RoutingService] Redirection bas√©e sur auth: {isAuthenticated: true, userID: '67ddab82ad36e217932ade0c'}
[DEBUG] routingService - Tentative de d√©termination du type utilisateur
[DEBUG] routingService - Type trouv√© dans user: host
[RoutingService] Redirection vers dashboard: {userType: 'host'}
[RoutingService] Redirection vers dashboard host
 [Layout] Analyse de route: {segments: Array(1), firstSegment: '(auth)', isAuthenticated: true, userType: 'host', userId: '67ddab82ad36e217932ade0c',¬†‚Ä¶}
 [Layout] Utilisateur authentifi√© dans groupe auth, redirection
 [Layout/Main] √âtat principal: {isAuthenticated: true, userType: 'host', loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Type trouv√© dans user: host
 [Layout] caaaca host dans (host),dashboard
 [Layout/Main] Rendu du slot principal
[Layout children]: Too many screens defined. Route "payment" is extraneous.

 üîç API call for user
[Layout] Analyse de route: {segments: Array(2), firstSegment: '(host)', isAuthenticated: true, userType: 'host', userId: '67ddab82ad36e217932ade0c',¬†‚Ä¶}
[Layout/Main] √âtat principal: {isAuthenticated: true, userType: 'host', loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Type trouv√© dans user: host
[Layout] caaaca host dans (host),dashboard
[Layout/Main] Rendu du slot principal
API Request: GET /hosts/me/active-listings?limit=5
API Request Headers: AxiosHeaders¬†{Accept: 'application/json', Content-Type: 'application/json', Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZC‚Ä¶jEwfQ.JBwxnfKh4bxX2Z9w6usVL6v_OlEM4sZrQs_6fw7gjGU'}
API Request: GET /notifications/unread-count
API Request Headers: AxiosHeaders¬†{Accept: 'application/json', Content-Type: 'application/json', Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZC‚Ä¶jEwfQ.JBwxnfKh4bxX2Z9w6usVL6v_OlEM4sZrQs_6fw7gjGU'}
[Layout/Main] √âtat principal: {isAuthenticated: true, userType: 'host', loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Type trouv√© dans user: host
[Layout] caaaca host dans (host),dashboard
[Layout/Main] Rendu du slot principal
[Layout/Main] √âtat principal: {isAuthenticated: true, userType: 'host', loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Type trouv√© dans user: host
[Layout] caaaca host dans (host),dashboard











[AuthAction] RegisterCleaner action appel√©e avec: {firstName: 'xx', lastName: 'xx', email: 'xx@hotmail.fr', phone: '0593485464', password: 'ggwp31320',¬†‚Ä¶}
Registering cleaner with data: {firstName: 'xx', lastName: 'xx', email: 'xx@hotmail.fr', phone: '0593485464', password: 'ggwp31320',¬†‚Ä¶}
[Layout/Main] √âtat principal: {isAuthenticated: false, userType: undefined, loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Aucun utilisateur fourni
[Layout] caaaca undefined dans register,cleaner
[Layout/Main] Rendu du slot principal
API Request: POST /auth/register/cleaner
API Request Headers: AxiosHeaders¬†{Accept: 'application/json', Content-Type: 'application/json'}
[AuthAction] RegisterCleaner r√©ponse: {success: true, token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3Z‚Ä¶zQ5fQ.RzJHu4h5zNPwHhdsaIkrCBFIDD0gM8-1FDUXzNWrRYA', user: {‚Ä¶}}
Auth token set globally
üîÑ Synchronizing user data from auth: {id: '67ddae65ad36e217932ade1a', firstName: 'xx', lastName: 'xx', email: 'xx@hotmail.fr', role: 'cleaner',¬†‚Ä¶}
[Layout/Main] √âtat principal: {isAuthenticated: false, userType: undefined, loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Aucun utilisateur fourni
[Layout] caaaca undefined dans cleaner,dashboard
[Layout/Main] Rendu du slot principal
[DEBUG] CleanerDashboard - Tentative de d√©termination du type utilisateur
[DEBUG] CleanerDashboard - Aucun utilisateur fourni
[DEBUG] CleanerDashboard - Tentative de d√©termination du type utilisateur
[DEBUG] CleanerDashboard - Aucun utilisateur fourni
[CleanerDashboard] V√©rification du type utilisateur: undefined
[CleanerDashboard] Utilisateur non authentifi√©, redirection vers login
[Layout] Analyse de route: {segments: Array(2), firstSegment: 'cleaner', isAuthenticated: false, userType: undefined, userId: undefined,¬†‚Ä¶}
[Layout] Non authentifi√©, redirection vers login
[LoginScreen] V√©rification √©tat authentification: {isAuthenticated: false, userId: undefined}
[Layout/Main] √âtat principal: {isAuthenticated: false, userType: undefined, loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Aucun utilisateur fourni
[Layout] caaaca undefined dans (auth)
[Layout/Main] Rendu du slot principal
[Layout] Analyse de route: {segments: Array(1), firstSegment: '(auth)', isAuthenticated: false, userType: undefined, userId: undefined,¬†‚Ä¶}
[Layout] Non authentifi√©, redirection vers login
[LoginScreen] V√©rification √©tat authentification: {isAuthenticated: false, userId: undefined}
[SyncMiddleware] Action d√©tect√©e: auth/registerCleaner/fulfilled, synchronisation des √©tats...
[SyncMiddleware] Donn√©es utilisateur extraites de auth action: ID: 67ddae65ad36e217932ade1a, Type: cleaner
üîÑ Synchronizing user data from auth: {id: '67ddae65ad36e217932ade1a', firstName: 'xx', lastName: 'xx', email: 'xx@hotmail.fr', role: 'cleaner',¬†‚Ä¶}
[Layout/Main] √âtat principal: {isAuthenticated: true, userType: 'cleaner', loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Type trouv√© dans user: cleaner
[Layout] caaaca cleaner dans (auth)
[Layout/Main] Rendu du slot principal
[LoginScreen] V√©rification √©tat authentification: {isAuthenticated: true, userId: '67ddae65ad36e217932ade1a'}
[LoginScreen] Utilisateur d√©j√† authentifi√©, redirection
[RoutingService] Redirection bas√©e sur auth: {isAuthenticated: true, userID: '67ddae65ad36e217932ade1a'}
Store not initialized. Make sure to call initializeStore first.
[DEBUG] routingService - Tentative de d√©termination du type utilisateur
[DEBUG] routingService - Type trouv√© dans user: cleaner
[RoutingService] Redirection vers dashboard: {userType: 'cleaner'}
[RoutingService] Redirection vers dashboard cleaner
[Layout] Analyse de route: {segments: Array(1), firstSegment: '(auth)', isAuthenticated: true, userType: 'cleaner', userId: '67ddae65ad36e217932ade1a',¬†‚Ä¶}
[Layout] Utilisateur authentifi√© dans groupe auth, redirection
[Layout/Main] √âtat principal: {isAuthenticated: true, userType: 'cleaner', loading: undefined}
[DEBUG] _layout.tsx/useProtectedRoute - Tentative de d√©termination du type utilisateur
[DEBUG] _layout.tsx/useProtectedRoute - Type trouv√© dans user: cleaner


[Layout] caaaca cleaner dans (host),dashboard
[Layout/Main] Rendu du slot principal
[Layout children]: Too many screens defined. Route "payment" is extraneous.
[Layout children]: Too many screens defined. Route "payment" is extraneous.
‚õî Not retrying due to client error (403)
All 2 retry attempts failed